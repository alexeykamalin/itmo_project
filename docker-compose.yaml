version: "3.8"
services: 
  app:
    build: ./app/
    image: myml-api:latest
    container_name: myml-api
    restart: unless-stopped
    env_file:
      - ./app/.env
    depends_on:
      - database
    volumes:
      - ./app:/app
    networks:
      - myml-network
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8080/test')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
  web:
    image: nginx:latest
    container_name: myml-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      app:
        condition: service_healthy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      # - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - myml-network
  rabbitmq:
    image: rabbitmq:4.0
    container_name: myml-rabbitmq
    hostname: rabbitmq
    restart: always
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=rmuser
      - RABBITMQ_DEFAULT_PASS=rmpassword
    ports:
      - 15672:15672
      - 5672:5672 
  database:
    image: postgres:latest
    container_name: myml-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      postgres -c max_connections=1000
               -c shared_buffers=256MB
               -c effective_cache_size=768MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.7
               -c wal_buffers=16MB
               -c default_statistics_target=100
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

volumes:
  postgres_data:

networks:
  myml-network:
    name: myml-network
    driver: bridge